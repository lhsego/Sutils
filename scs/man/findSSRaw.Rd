% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findSSRaw.R
\name{findSSRaw}
\alias{findSSRaw}
\title{Find the minimum sample size for a given set of parameters}
\usage{
findSSRaw(conf, rho, N, B, ub, alpha, ...)
}
\arguments{
\item{conf}{the target confidence that one wishes to achieve}

\item{rho}{a vector of relative weights of finding an unacceptable item relative to
stratum 1. Note that rho[1] = 1 always.}

\item{N}{the vector of total grid cells for each stratum}

\item{B}{the beta hyperparameter of theta ~ beta(1, B)
larger values of B imply lower probability of finding an unacceptable item}

\item{ub}{the total number of unacceptable items one is willing to accept
that remain in the unsampled grid cells}

\item{alpha}{a numeric vector of arbitrary length with elements in c(0,1). This function
chooses a locally optimal allocation according to the following function:
alpha*(N/sum(N)) + (1 - alpha)*rho. That is to say, an alpha close to zero favors
allocating samples by risk (rho) and an alpha close to one favors allocating samples by
relative proportion.}
}
\value{
the minimum sample size with respect to a value of alpha.
}
\description{
Find the minimum sample size for a given set of parameters
}
\examples{

# N must be an integer
N <- c(1000, 1000, 1000)

rho <- c(1, 0.85, 0.75)

B <- 70

# 1\% of total grid cells
ub <- ceiling(.01*sum(N))

# I want to be 95\% confident that no more than ub items were left undiscovered
# in the unsampled area
conf <- 0.95

# I want to calculate a sequence of sample sizes with respect to alpha. The
# smallest total sample size of this set is the returned value.

alpha <- seq(0, 1, length = 10)

minSamps <- findSSRaw(conf, rho, N, B, ub, alpha)
}
\author{
Alex Venzin
}

