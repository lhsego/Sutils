% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/logUtil.R
\name{logUtil}
\alias{logUtil}
\title{The single attribute logarithmic utility function}
\usage{
logUtil(z, shift = 0, zrange = range(z), urange = c(0, 1))
}
\arguments{
\item{z}{A vector of attribute measurements, or values, in their native scale}

\item{shift}{A numeric value that shifts the \code{z} values by \code{z - shift} before taking the log.}

\item{zrange}{A vector with 2 elements containing the minimum and maximum possible values of the attribute.
However, because the log function goes to \code{-Infty} as \code{z} goes to 0, \code{zrange[1]} fixes a
lower endpoint such that \eqn{u(zrange[1]) = urange[1]}.}

\item{urange}{A vector with 2 elements indicating the range of the utility function. \code{urange[1]}
is the mapping of \code{zrange[1]}, and \code{urange[2]} is the mapping of \code{zrange[2]}.}
}
\value{
The utility values of \code{z}
}
\description{
The single attribute (uni-dimensional) natural logarithmic utility function
}
\details{
The log utility function is given by:
\deqn{u(z) = urange[1] + (urange[2] - urange[1]) * \frac{log(z - shift) -
      log(zrange[1] - shift)}{log(zrange[2] - shift) - log(zrange[1] - shift)}}
Note \eqn{u(zrange[1]) = urange[1])} and \eqn{u(zrange[2]) = urange[2])}.
}
\examples{
# An identify
logUtil(exp(0:10), urange = c(0, 10))

# Just mapping the log to 0, 1
logUtil(1:10)

# Suppose we have seven classes, and p contains probabilities assigned
# to the true class for 5 observations
p <- c(0.3, 0.8, 0.99, 0.05, 1/7)

# This calculate the log score, but ensure that scores that do worse than guessing (i.e. uniform)
# are mapped to < 0
logUtil(p, zrange = c(1/7, 1))

# Example of the shift to move us away from NA and -Inf
x <- logUtil(-5:7, shift = -5.00001)
print(x)
plot(x)
attributes(x)
}

